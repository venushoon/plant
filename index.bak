<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>식물 한살이 탐구 (Wikipedia API)</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Pretendard:wght@400;600;700&display=swap" rel="stylesheet">
  <style>
    body { font-family: 'Pretendard', system-ui, -apple-system, Segoe UI, Roboto, Noto Sans, sans-serif; }
    @media print {
      .no-print { display: none !important; }
      .print-grid { grid-template-columns: 1fr 1fr; gap: 16px; }
      a::after { content: " (링크)"; font-size: 10px; }
    }
  </style>
</head>
<body class="min-h-screen bg-slate-50">
  <header class="bg-white sticky top-0 z-10 border-b">
    <div class="max-w-6xl mx-auto px-4 py-4 flex items-center gap-3">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-7 h-7 text-green-600">
        <path d="M12 2a7 7 0 00-7 7c0 5 7 13 7 13s7-8 7-13a7 7 0 00-7-7zm0 9.5a2.5 2.5 0 110-5 2.5 2.5 0 010 5z"/>
      </svg>
      <div>
        <h1 class="text-xl font-bold">식물 한살이 탐구 (Wikipedia)</h1>
        <p class="text-sm text-slate-500">검색어로 식물을 입력하면 발아·성장·개화·결실 과정과 이미지까지 자동 정리</p>
      </div>
      <div class="ml-auto text-xs text-slate-400">© 위키백과/Wikimedia 자료 사용 · 라이선스 표시</div>
    </div>
  </header>

  <section class="max-w-6xl mx-auto px-4 py-4">
    <div class="bg-white rounded-2xl shadow p-4 flex flex-col md:flex-row gap-3 items-stretch md:items-center">
      <div class="flex-1 flex gap-2">
        <input id="q" class="w-full rounded-xl border px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500" placeholder="예: 해바라기, 벚나무, 소나무 ..." />
        <select id="lang" class="rounded-xl border px-3 py-3">
          <option value="ko" selected>한국어(ko)</option>
          <option value="en">English(en)</option>
        </select>
      </div>
      <div class="flex gap-2">
        <button id="searchBtn" class="rounded-xl bg-green-600 text-white px-5 py-3 font-semibold hover:bg-green-700 transition">검색</button>
        <button id="printBtn" class="rounded-xl border px-5 py-3 font-semibold hover:bg-slate-50 transition">인쇄/배포</button>
      </div>
    </div>
    <p class="text-xs text-slate-500 mt-2">※ 한국어 문서가 부족할 경우 자동으로 영어 문서로 보완 검색합니다.</p>
  </section>

  <main class="max-w-6xl mx-auto px-4 pb-16">
    <section id="summary" class="hidden bg-white rounded-2xl shadow overflow-hidden">
      <div class="md:flex">
        <div class="md:w-1/3">
          <img id="thumb" class="w-full h-64 object-cover" alt="대표 이미지" />
        </div>
        <div class="p-6 md:w-2/3">
          <div class="flex items-start gap-2">
            <h2 id="title" class="text-2xl font-bold"></h2>
            <a id="wikiLink" href="#" target="_blank" class="ml-auto text-green-600 text-sm underline">원문 보기</a>
          </div>
          <p id="extract" class="mt-3 text-slate-700 leading-7"></p>
          <div id="meta" class="mt-3 text-xs text-slate-500"></div>
        </div>
      </div>
    </section>

    <section id="sections" class="mt-6 grid lg:grid-cols-3 gap-6 print-grid"></section>

    <section id="growthWrap" class="mt-6 hidden">
      <h3 class="text-lg font-semibold mb-3">한살이 과정 요약</h3>
      <div id="growthContent" class="bg-white rounded-2xl shadow p-5 text-slate-700 leading-7"></div>
    </section>

    <!-- 단계별 카드 -->
    <section id="stageCards" class="mt-6 hidden">
      <h3 class="text-lg font-semibold mb-3">발아 → 성장 → 개화 → 결실</h3>
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div class="bg-white rounded-2xl shadow p-5 flex flex-col items-center">
          <div class="text-4xl">🌱</div>
          <div class="mt-2 font-semibold">발아</div>
          <p class="text-sm text-slate-600 text-center mt-1">씨앗에서 싹이 트며 뿌리와 줄기가 자라기 시작</p>
        </div>
        <div class="bg-white rounded-2xl shadow p-5 flex flex-col items-center">
          <div class="text-4xl">🌿</div>
          <div class="mt-2 font-semibold">성장</div>
          <p class="text-sm text-slate-600 text-center mt-1">잎과 줄기가 무성하게 자라며 광합성을 활발히 함</p>
        </div>
        <div class="bg-white rounded-2xl shadow p-5 flex flex-col items-center">
          <div class="text-4xl">🌸</div>
          <div class="mt-2 font-semibold">개화</div>
          <p class="text-sm text-slate-600 text-center mt-1">꽃이 피어 수분과 수정이 이루어짐</p>
        </div>
        <div class="bg-white rounded-2xl shadow p-5 flex flex-col items-center">
          <div class="text-4xl">🍎</div>
          <div class="mt-2 font-semibold">결실</div>
          <p class="text-sm text-slate-600 text-center mt-1">열매가 맺히고 씨앗이 형성되어 번식 준비</p>
        </div>
      </div>
    </section>

    <section id="galleryWrap" class="mt-6 hidden">
      <h3 class="text-lg font-semibold mb-3">관련 사진·이미지</h3>
      <div id="gallery" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3"></div>
      <p class="text-xs text-slate-500 mt-2">이미지를 클릭하면 원본과 라이선스 정보를 볼 수 있습니다.</p>
    </section>

    <div id="status" class="mt-8 text-center text-slate-500"></div>
  </main>

  <script>
    const $ = (sel) => document.querySelector(sel);
    const statusEl = $('#status');
    const sectionMapKo = [ '발아','생장','개화','수분','수정','결실','씨앗','열매','번식','형태','특징' ];
    const sectionMapEn = [ 'Germination','Growth','Flowering','Pollination','Fertilization','Fruit','Seed','Reproduction','Characteristics','Description' ];

    function apiURL(lang, path) { return `https://${lang}.wikipedia.org${path}`; }

    async function searchTitle(query, lang) {
      const url = apiURL(lang, `/w/api.php?action=query&list=search&srnamespace=0&srsearch=${encodeURIComponent(query)}&format=json&origin=*`);
      const r = await fetch(url);
      const j = await r.json();
      return j?.query?.search?.[0]?.title || null;
    }

    async function getSummary(title, lang) {
      const url = apiURL(lang, `/api/rest_v1/page/summary/${encodeURIComponent(title)}`);
      const r = await fetch(url);
      if (!r.ok) throw new Error('요약 불러오기 실패');
      return r.json();
    }

    async function getSections(title, lang) {
      const url = apiURL(lang, `/w/api.php?action=parse&page=${encodeURIComponent(title)}&prop=sections&format=json&origin=*`);
      const r = await fetch(url);
      const j = await r.json();
      return j?.parse?.sections || [];
    }

    async function getSectionHTML(title, index, lang) {
      const url = apiURL(lang, `/w/api.php?action=parse&page=${encodeURIComponent(title)}&prop=text&section=${index}&format=json&origin=*`);
      const r = await fetch(url);
      const j = await r.json();
      return j?.parse?.text?.['*'] || '';
    }

    async function getMediaList(title, lang) {
      const url = apiURL(lang, `/api/rest_v1/page/media-list/${encodeURIComponent(title)}`);
      const r = await fetch(url);
      if (!r.ok) return { items: [] };
      return r.json();
    }

    function pickSectionsByLabels(sections, lang) {
      const labels = (lang === 'ko') ? sectionMapKo : sectionMapEn;
      const wanted = [];
      for (const s of sections) {
        const name = s?.line || '';
        if (labels.some(l => name.toLowerCase().includes(l.toLowerCase()))) {
          wanted.push({ index: s.index, name });
        }
      }
      const seen = new Set();
      return wanted.filter(w => { const key = w.name.toLowerCase(); if (seen.has(key)) return false; seen.add(key); return true; }).slice(0, 6);
    }

    function stripRefs(html) {
      return html.replaceAll(/<sup[^>]*class=\"reference\"[\s\S]*?<\/sup>/g, '').replaceAll(/<table[^>]*class=\"infobox[\s\S]*?<\/table>/g, '').replaceAll(/<style[\s\S]*?<\/style>/g, '').replaceAll(/<script[\s\S]*?<\/script>/g, '').replaceAll(/\s\(\s*편집\s*\)/g, '');
    }

    function cardHTML(title, inner) { return `<article class=\"bg-white rounded-2xl shadow p-5\"><h4 class=\"font-semibold mb-2\">${title}</h4><div class=\"prose max-w-none\">${inner}</div></article>`; }

    function imageItemHTML(item) {
      const thumb = item?.thumbnail?.source || item?.srcset?.[0]?.src;
      const src = item?.original?.source || thumb;
      const caption = item?.title || item?.caption?.text || '';
      const credit = item?.artist?.text || item?.credit || '';
      return `<a href=\"${src}\" target=\"_blank\" class=\"group block overflow-hidden rounded-xl border bg-white\"><img src=\"${thumb}\" alt=\"${caption}\" class=\"w-full h-40 object-cover group-hover:scale-105 transition\"/><div class=\"p-2 text-xs text-slate-600"><div class=\"truncate\">${caption || '이미지'}</div><div class=\"text-[10px] text-slate-400 truncate\">${credit || ''}</div></div></a>`;
    }

    function setStatus(msg) { statusEl.textContent = msg || ''; }
    function show(el) { el.classList.remove('hidden'); }
    function hide(el) { el.classList.add('hidden'); }

    function generateGrowthInfo(summaryText) {
      let text = summaryText.toLowerCase();
      if (text.includes('씨앗') || text.includes('seed')) {
        return "이 식물은 씨앗에서 발아하여 자라며, 잎과 줄기가 발달한 후 꽃이 피고 열매를 맺습니다.";
      } else if (text.includes('포자') || text.includes('spore')) {
        return "이 식물은 포자로 번식하여 발아 후 어린 개체가 자라 성체로 성장합니다.";
      } else {
        return "이 식물의 생활사는 씨앗이나 포자에서 시작해 자라고 꽃을 피운 뒤 열매를 맺는 과정을 거칩니다.";
      }
    }

    function generateComparison(summaryText) {
      return "어린 시기에는 작은 새싹과 연약한 잎으로 나타나고, 성숙하면 꽃과 열매를 맺으며 번식에 기여합니다.";
    }

    async function run(query, lang) {
      try {
        setStatus('검색 중…');
        hide($('#summary')); hide($('#galleryWrap')); hide($('#growthWrap')); hide($('#stageCards'));
        $('#sections').innerHTML = ''; $('#gallery').innerHTML = '';

        let title = await searchTitle(query, lang);
        let usedLang = lang;

        if (!title && lang === 'ko') { usedLang = 'en'; title = await searchTitle(query, 'en'); }
        if (!title) { setStatus('검색 결과가 없습니다.'); return; }

        const summary = await getSummary(title, usedLang);
        $('#title').textContent = summary.title || title;
        $('#extract').textContent = summary.extract || '';
        $('#thumb').src = summary.thumbnail?.source || 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg';
        $('#wikiLink').href = summary.content_urls?.desktop?.page || apiURL(usedLang, `/wiki/${encodeURIComponent(title)}`);
        $('#meta').textContent = `언어: ${usedLang.toUpperCase()} · 문서 ID: ${summary.pageid || '-'} · 분류: ${summary.description || ''}`;
        show($('#summary'));

        const sections = await getSections(summary.title || title, usedLang);
        const picks = pickSectionsByLabels(sections, usedLang);
        const secWrap = $('#sections');
        if (picks.length) {
          for (const p of picks) {
            const html = await getSectionHTML(summary.title || title, p.index, usedLang);
            const clean = stripRefs(html);
            const h = cardHTML(p.name, clean);
            const div = document.createElement('div');
            div.innerHTML = h;
            div.querySelectorAll('a').forEach(a=>a.setAttribute('target','_blank'));
            secWrap.appendChild(div.firstElementChild);
          }
        }

        const growthInfo = generateGrowthInfo(summary.extract || '');
        const comparison = generateComparison(summary.extract || '');
        $('#growthContent').innerHTML = `<p>${growthInfo}</p><p class=\"mt-2\">${comparison}</p>`;
        show($('#growthWrap'));
        show($('#stageCards'));

        const media = await getMediaList(summary.title || title, usedLang);
        const images = (media.items || []).filter(x => x.type === 'image' || x?.type === 'mediainfo');
        if (images.length) {
          $('#gallery').innerHTML = images.slice(0, 16).map(imageItemHTML).join('');
          show($('#galleryWrap'));
        }

        setStatus('');
      } catch (e) {
        console.error(e);
        setStatus('불러오는 중 문제가 발생했어요.');
      }
    }

    $('#searchBtn').addEventListener('click', () => run($('#q').value.trim() || '해바라기', $('#lang').value));
    $('#q').addEventListener('keydown', (e) => { if (e.key === 'Enter') $('#searchBtn').click(); });
    $('#printBtn').addEventListener('click', () => window.print());

    window.addEventListener('DOMContentLoaded', () => run('해바라기', 'ko'));
  </script>
</body>
</html>
